// calculadora.js - Uma calculadora que funciona no terminal
// Criado para aprender Node.js - Conceitos: argumentos, valida√ß√£o, opera√ß√µes

console.log('üßÆ === CALCULADORA SIMPLES ===');
console.log('');

// Capturar argumentos da linha de comando
// process.argv cont√©m: [node, script.js, arg1, arg2, arg3...]
// slice(2) remove os dois primeiros e fica s√≥ com nossos argumentos
const args = process.argv.slice(2);

// Debug: mostrar o que foi recebido
console.log('üì¨ Argumentos recebidos:', args);
console.log('');

// valida√ß√£o: verificar se temos exatamente 3 argumentos
if (args.length !== 3) {
  console.log('‚ùå Ops! Voc√™ precisa digitar exatamente 3 coisas:');
  console.log('üìñ Uso correto: node calculadora.js <n√∫mero1> <opera√ß√£o> <n√∫mero2>');
  console.log('');
  console.log('üí° Exemplos v√°lidos:');
  console.log('  node calculadora.js 10 + 5');
  console.log('  node calculadora.js 20.5 - 3.2');
  console.log('  node calculadora.js 7 * 8');
  console.log('  node calculadora.js 15 / 3');
  console.log('');
  console.log('‚öôÔ∏è Opera√ß√µes dispon√≠veis: + - * /');
  
  // Encerrar o programa com c√≥digo de erro
  process.exit(1);
}

// Extrair e converter os valores
const num1 = parseFloat(args[0]); // Primeiro n√∫mero
const operacao = args[1]; // Opera√ß√£o (+, -, *, /)
const num2 = parseFloat(args[2]); // Segundo n√∫mero

// Validar se os n√∫meros s√£o v√°lidos
if (isNaN(num1) || isNaN(num2)) {
  console.log('‚ùå Erro: os valores devem ser n√∫meros v√°lidos!');
  console.log('');
  console.log('üí° Exemplos de n√∫meros v√°lidos:');
  console.log('  ‚úÖ 10, 5.5, -3, 0, 100.25');
  console.log('  ‚ùå abc, 10a, texto, vazio');
  console.log('');
  console.log('üîÑÔ∏è Tente novamente com n√∫meros v√°lidos.');
  process.exit(1);
}

// Mostrar o que vamos calcular
console.log(`üî¢ Calculando: ${num1} ${operacao} ${num2}`);
console.log('');

// Vari√°vel para armazenar o resultado
let resultado;

// Realizar a opera√ß√£o usando switch
switch (operacao) {
  case '+':
    resultado = num1 + num2;
    console.log('‚ûï Realizando soma...');
    break;

  case '-':
    resultado = num1 - num2;
    console.log('‚ûñ Realizando subtra√ß√£o...');
    break;

  case '*':
    resultado = num1 * num2;
    console.log('‚úñÔ∏è Realizando multiplica√ß√£o...');
    break;

  case '/':
    // Verifica√ß√£o especial: divis√£o por zero
    if (num2 === 0) {
      console.log('‚ùå Erro: N√£o √© poss√≠vel dividir por zero!');
      console.log('');
      console.log('üìö Explica√ß√£o: Na matem√°tica, divis√£o por zero √© indefinida.');
      console.log('üí° Tente usar um n√∫mero diferente de zero como divisor.');
      process.exit(1);
    }
    resultado = num1 / num2;
    console.log('‚ûó Realizando divis√£o...');
    break;

  default:
    // Opera√ß√£o n√£o reconhecida
    console.log(`‚ùå Erro: Opera√ß√£o '${operacao}' n√£o √© v√°lida!`);
    console.log('');
    console.log('Opera√ß√µes dispon√≠veis:');
    console.log('  + (soma)');
    console.log('  - (subtra√ß√£o)');
    console.log('  * (multiplica√ß√£o)');
    console.log('  / (divis√£o)');
    console.log('');
    console.log('üí° Tente novamente com uma opera√ß√£o v√°lida.');
    process.exit(1);
}

// Exibir o resultado
console.log('');
console.log('üìä === RESULTADO ===');
console.log(`${num1} ${operacao} ${num2} = ${resultado}`);

// Para divis√µes, mostrar resultado com mais precis√£o se necess√°rio
if (operacao === '/' && resultado % 1 !== 0) {
  console.log(`üéØ Resultado detalhado: ${resultado.toFixed(6)}`);
}

// Informa√ß√µes extras baseadas no resultado
if (resultado < 0) {
  console.log('‚ö†Ô∏è Nota: O resultado √© negativo.');
} else if (resultado === 0) {
  console.log('‚ö†Ô∏è Nota: O resultado √© zero.');
} else if (resultado > 1000) {
  console.log('üöÄ Nota: Resultado grande! üöÄ');
}

console.log('');
console.log('‚úÖ C√°lculo conclu√≠do com sucesso!');
